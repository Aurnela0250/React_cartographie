{
    "openapi": "3.1.0",
    "info": {
        "title": "Orientation Mada API",
        "description": "\n## Orientation Mada API\n\nBienvenue sur l'API de cartographie des √©tablissements et formations √† Madagascar.\n\n### üìö Documentation\n\n- [Documentation technique](https://orientationmada.com/docs)\n- [Product Requirements Document (PRD)](https://orientationmada.com/prd)\n- [D√©p√¥t GitHub](https://github.com/orientationmada/api)\n- [Guide d'utilisation](https://orientationmada.com/guide)\n\n### üîë Authentification\n\n- JWT Bearer Token requis pour les endpoints prot√©g√©s\n- Voir `/docs` pour tester les endpoints\n\n### üõ†Ô∏è Support\n\nPour toute question, contactez l'√©quipe technique √† [support@orientationmada.com](mailto:support@orientationmada.com)\n\n",
        "version": "1.0.0"
    },
    "paths": {
        "/": {
            "get": {
                "summary": "Read Root",
                "operationId": "read_root__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "summary": "Health Check",
                "description": "Endpoint de sant√© pour les v√©rifications Docker et monitoring.",
                "operationId": "health_check_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    }
                }
            }
        },
        "/api/v1/auth/signup": {
            "post": {
                "tags": ["Auth"],
                "summary": "Sign up a new user",
                "description": "Endpoint to sign up a new user. Requires email and password. Returns user details",
                "operationId": "sign_up_api_v1_auth_signup_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignUpSchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSchema"
                                },
                                "example": {
                                    "id": 1,
                                    "email": "user@example.com",
                                    "active": true,
                                    "created_at": "2023-10-01T12:00:00Z",
                                    "updated_at": "2023-10-01T12:00:00Z"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Erreur interne du serveur.",
                                    "code": "internal_server",
                                    "category": "server_error",
                                    "request_id": "req-999999",
                                    "timestamp": "2023-10-01T12:00:00Z",
                                    "stack_trace": "Traceback (most recent call last): ..."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": ["Auth"],
                "summary": "Login",
                "operationId": "login_api_v1_auth_login_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/Login" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "user": {
                                        "id": 1,
                                        "email": "user@example.com",
                                        "active": true,
                                        "created_at": "2023-10-01T12:00:00Z",
                                        "updated_at": "2023-10-01T12:00:00Z"
                                    },
                                    "user_id": "1",
                                    "exp": 1710000000,
                                    "iat": 1709990000,
                                    "jti": "jwt-uuid-123",
                                    "token_type": "access",
                                    "iss": "your-issuer",
                                    "aud": "your-audience",
                                    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                                    "refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Erreur de validation.",
                                    "code": "validation",
                                    "category": "client_error",
                                    "request_id": "req-654321",
                                    "timestamp": "2023-10-01T12:00:00Z",
                                    "details": [
                                        {
                                            "field": "email",
                                            "message": "Format d'email invalide.",
                                            "code": "bad_request",
                                            "value": "not-an-email"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/token": {
            "post": {
                "tags": ["Auth"],
                "summary": "Login Oauth2",
                "operationId": "login_oauth2_api_v1_auth_token_post",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_login_oauth2_api_v1_auth_token_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "user": {
                                        "id": 1,
                                        "email": "user@example.com",
                                        "active": true,
                                        "created_at": "2023-10-01T12:00:00Z",
                                        "updated_at": "2023-10-01T12:00:00Z"
                                    },
                                    "user_id": "1",
                                    "exp": 1710000000,
                                    "iat": 1709990000,
                                    "jti": "jwt-uuid-123",
                                    "token_type": "access",
                                    "iss": "your-issuer",
                                    "aud": "your-audience",
                                    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                                    "refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Erreur de validation.",
                                    "code": "validation",
                                    "category": "client_error",
                                    "request_id": "req-654321",
                                    "timestamp": "2023-10-01T12:00:00Z",
                                    "details": [
                                        {
                                            "field": "email",
                                            "message": "Format d'email invalide.",
                                            "code": "bad_request",
                                            "value": "not-an-email"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/refresh": {
            "post": {
                "tags": ["Auth"],
                "summary": "Refresh Token",
                "operationId": "refresh_token_api_v1_auth_refresh_post",
                "parameters": [
                    {
                        "name": "refresh_token",
                        "in": "query",
                        "required": true,
                        "schema": { "type": "string", "title": "Refresh Token" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Refresh successful",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "user": {
                                        "id": 1,
                                        "email": "user@example.com",
                                        "active": true,
                                        "created_at": "2023-10-01T12:00:00Z",
                                        "updated_at": "2023-10-01T12:00:00Z"
                                    },
                                    "user_id": "1",
                                    "exp": 1710000000,
                                    "iat": 1709990000,
                                    "jti": "jwt-uuid-123",
                                    "token_type": "access",
                                    "iss": "your-issuer",
                                    "aud": "your-audience",
                                    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                                    "refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Erreur de validation.",
                                    "code": "validation",
                                    "category": "client_error",
                                    "request_id": "req-654321",
                                    "timestamp": "2023-10-01T12:00:00Z",
                                    "details": [
                                        {
                                            "field": "email",
                                            "message": "Format d'email invalide.",
                                            "code": "bad_request",
                                            "value": "not-an-email"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Access denied. Authentication required.",
                                    "code": "unauthorized",
                                    "category": "client_error",
                                    "request_id": "req-123456",
                                    "timestamp": "2023-10-01T12:00:00Z"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Erreur interne du serveur.",
                                    "code": "internal_server",
                                    "category": "server_error",
                                    "request_id": "req-999999",
                                    "timestamp": "2023-10-01T12:00:00Z",
                                    "stack_trace": "Traceback (most recent call last): ..."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/me": {
            "get": {
                "tags": ["Auth"],
                "summary": "Current User",
                "operationId": "current_user_api_v1_auth_me_get",
                "responses": {
                    "200": {
                        "description": "Current user details",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "id": 1,
                                    "email": "user@example.com",
                                    "active": true,
                                    "created_at": "2023-10-01T12:00:00Z",
                                    "updated_at": "2023-10-01T12:00:00Z"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Access denied. Authentication required.",
                                    "code": "unauthorized",
                                    "category": "client_error",
                                    "request_id": "req-123456",
                                    "timestamp": "2023-10-01T12:00:00Z"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Erreur interne du serveur.",
                                    "code": "internal_server",
                                    "category": "server_error",
                                    "request_id": "req-999999",
                                    "timestamp": "2023-10-01T12:00:00Z",
                                    "stack_trace": "Traceback (most recent call last): ..."
                                }
                            }
                        }
                    }
                },
                "security": [{ "OAuth2PasswordBearer": [] }]
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": ["Auth"],
                "summary": "Logout",
                "operationId": "logout_api_v1_auth_logout_post",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "refresh_token",
                        "in": "query",
                        "required": true,
                        "schema": { "type": "string", "title": "Refresh Token" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Successfully logged out"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Access denied. Authentication required.",
                                    "code": "unauthorized",
                                    "category": "client_error",
                                    "request_id": "req-123456",
                                    "timestamp": "2023-10-01T12:00:00Z"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Erreur interne du serveur.",
                                    "code": "internal_server",
                                    "category": "server_error",
                                    "request_id": "req-999999",
                                    "timestamp": "2023-10-01T12:00:00Z",
                                    "stack_trace": "Traceback (most recent call last): ..."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cities/": {
            "post": {
                "tags": ["Cities"],
                "summary": "Cr√©er une nouvelle ville",
                "description": "Cr√©e une nouvelle ville avec validation et mise en cache automatique",
                "operationId": "create_city_api_v1_cities__post",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCitySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CitySchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Cities"],
                "summary": "Lister toutes les villes",
                "description": "Liste pagin√©e de toutes les villes avec cache haute performance",
                "operationId": "get_all_cities_api_v1_cities__get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Per Page"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultSchema_CitySchema_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cities/{city_id}/": {
            "put": {
                "tags": ["Cities"],
                "summary": "Mettre √† jour une ville",
                "description": "Met √† jour une ville avec invalidation de cache automatique",
                "operationId": "update_city_api_v1_cities__city_id___put",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "city_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "City Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCitySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CitySchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Cities"],
                "summary": "Supprimer une ville",
                "description": "Supprime une ville avec invalidation de cache automatique",
                "operationId": "delete_city_api_v1_cities__city_id___delete",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "city_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "City Id"
                        }
                    }
                ],
                "responses": {
                    "204": { "description": "Successful Response" },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Cities"],
                "summary": "R√©cup√©rer une ville par ID",
                "description": "R√©cup√®re une ville sp√©cifique avec cache ultra-rapide",
                "operationId": "get_city_api_v1_cities__city_id___get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "city_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "City Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CitySchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cities/filter/": {
            "get": {
                "tags": ["Cities"],
                "summary": "Filtrer les villes",
                "description": "Recherche pagin√©e de villes avec filtres et cache intelligent",
                "operationId": "filter_cities_api_v1_cities_filter__get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Per Page"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name"
                        }
                    },
                    {
                        "name": "name_contains",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Contains"
                        }
                    },
                    {
                        "name": "name_starts_with",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Starts With"
                        }
                    },
                    {
                        "name": "name_ends_with",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Ends With"
                        }
                    },
                    {
                        "name": "region_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "type": "integer", "minimum": 1 },
                                { "type": "null" }
                            ],
                            "title": "Region Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultSchema_CitySchema_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/domains/": {
            "post": {
                "tags": ["Domains"],
                "summary": "Cr√©er un nouveau domaine",
                "description": "Cr√©e un nouveau domaine d'√©tude avec validation et mise en cache automatique",
                "operationId": "create_domain_api_v1_domains__post",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateDomainSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Domains"],
                "summary": "Lister tous les domaines",
                "description": "Liste pagin√©e de tous les domaines avec cache haute performance",
                "operationId": "get_all_domains_api_v1_domains__get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Per Page"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultSchema_DomainSchema_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/domains/{domain_id}/": {
            "put": {
                "tags": ["Domains"],
                "summary": "Mettre √† jour un domaine",
                "description": "Met √† jour un domaine avec invalidation de cache automatique",
                "operationId": "update_domain_api_v1_domains__domain_id___put",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "domain_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Domain Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateDomainSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Domains"],
                "summary": "Supprimer un domaine",
                "description": "Supprime un domaine avec invalidation de cache automatique",
                "operationId": "delete_domain_api_v1_domains__domain_id___delete",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "domain_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Domain Id"
                        }
                    }
                ],
                "responses": {
                    "204": { "description": "Successful Response" },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Domains"],
                "summary": "R√©cup√©rer un domaine par ID",
                "description": "R√©cup√®re un domaine sp√©cifique avec cache ultra-rapide",
                "operationId": "get_domain_api_v1_domains__domain_id___get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "domain_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Domain Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/domains/filter/": {
            "get": {
                "tags": ["Domains"],
                "summary": "Filtrer les domaines",
                "description": "Recherche pagin√©e de domaines avec filtres et cache intelligent",
                "operationId": "filter_domains_api_v1_domains_filter__get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Per Page"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name"
                        }
                    },
                    {
                        "name": "name_contains",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Contains"
                        }
                    },
                    {
                        "name": "name_starts_with",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Starts With"
                        }
                    },
                    {
                        "name": "name_ends_with",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Ends With"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultSchema_DomainSchema_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/establishments/filter/": {
            "get": {
                "tags": ["Establishments"],
                "summary": "Filtrer les √©tablissements",
                "description": "Recherche pagin√©e d'√©tablissements avec filtres et cache intelligent",
                "operationId": "filter_establishments_api_v1_establishments_filter__get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Per Page"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name"
                        }
                    },
                    {
                        "name": "name_contains",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Contains"
                        }
                    },
                    {
                        "name": "acronym",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Acronym"
                        }
                    },
                    {
                        "name": "acronym_contains",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Acronym Contains"
                        }
                    },
                    {
                        "name": "address_contains",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Address Contains"
                        }
                    },
                    {
                        "name": "establishment_type_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "type": "integer" },
                                { "type": "null" }
                            ],
                            "title": "Establishment Type Id"
                        }
                    },
                    {
                        "name": "city_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "type": "integer" },
                                { "type": "null" }
                            ],
                            "title": "City Id"
                        }
                    },
                    {
                        "name": "latitude_min",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "number" }, { "type": "null" }],
                            "title": "Latitude Min"
                        }
                    },
                    {
                        "name": "latitude_max",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "number" }, { "type": "null" }],
                            "title": "Latitude Max"
                        }
                    },
                    {
                        "name": "longitude_min",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "number" }, { "type": "null" }],
                            "title": "Longitude Min"
                        }
                    },
                    {
                        "name": "longitude_max",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "number" }, { "type": "null" }],
                            "title": "Longitude Max"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultSchema_EstablishmentSchema_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/establishments/": {
            "post": {
                "tags": ["Establishments"],
                "summary": "Cr√©er un nouvel √©tablissement",
                "description": "Cr√©e un nouvel √©tablissement avec validation et mise en cache automatique",
                "operationId": "create_establishment_api_v1_establishments__post",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateEstablishmentSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EstablishmentSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Establishments"],
                "summary": "Lister tous les √©tablissements",
                "description": "Liste pagin√©e de tous les √©tablissements avec cache haute performance",
                "operationId": "get_all_establishments_api_v1_establishments__get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Per Page"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultSchema_EstablishmentSchema_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/establishments/{establishment_id}/": {
            "get": {
                "tags": ["Establishments"],
                "summary": "R√©cup√©rer un √©tablissement par ID",
                "description": "R√©cup√®re un √©tablissement sp√©cifique avec cache ultra-rapide",
                "operationId": "get_establishment_api_v1_establishments__establishment_id___get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "establishment_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Establishment Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EstablishmentSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Establishments"],
                "summary": "Mettre √† jour un √©tablissement",
                "description": "Met √† jour un √©tablissement avec invalidation de cache automatique",
                "operationId": "update_establishment_api_v1_establishments__establishment_id___put",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "establishment_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Establishment Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateEstablishmentSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EstablishmentSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Establishments"],
                "summary": "Supprimer un √©tablissement",
                "description": "Supprime un √©tablissement avec invalidation de cache automatique",
                "operationId": "delete_establishment_api_v1_establishments__establishment_id___delete",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "establishment_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Establishment Id"
                        }
                    }
                ],
                "responses": {
                    "204": { "description": "Successful Response" },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/establishments/{establishment_id}/rate/": {
            "post": {
                "tags": ["Establishments"],
                "summary": "Noter un √©tablissement",
                "description": "Permet √† un utilisateur d'attribuer une note √† un √©tablissement",
                "operationId": "rate_establishment_api_v1_establishments__establishment_id__rate__post",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "establishment_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Establishment Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/establishment-types/filter/": {
            "get": {
                "tags": ["Establishment Types"],
                "summary": "Filtrer les types d'√©tablissement",
                "description": "Recherche pagin√©e de types d'√©tablissement avec filtres et cache intelligent",
                "operationId": "filter_establishment_types_api_v1_establishment_types_filter__get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Per Page"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name"
                        }
                    },
                    {
                        "name": "name_contains",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Contains"
                        }
                    },
                    {
                        "name": "name_starts_with",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Starts With"
                        }
                    },
                    {
                        "name": "name_ends_with",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Ends With"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultSchema_EstablishmentTypeSchema_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/establishment-types/": {
            "post": {
                "tags": ["Establishment Types"],
                "summary": "Cr√©er un type d'√©tablissement",
                "description": "Cr√©e un nouveau type d'√©tablissement avec validation et mise en cache automatique",
                "operationId": "create_establishment_type_api_v1_establishment_types__post",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateEstablishmentTypeSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EstablishmentTypeSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Establishment Types"],
                "summary": "Lister tous les types d'√©tablissement",
                "description": "Liste pagin√©e de tous les types d'√©tablissement avec cache haute performance",
                "operationId": "get_all_establishment_types_api_v1_establishment_types__get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Per Page"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultSchema_EstablishmentTypeSchema_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/establishment-types/{establishment_type_id}/": {
            "get": {
                "tags": ["Establishment Types"],
                "summary": "R√©cup√©rer un type d'√©tablissement par ID",
                "description": "R√©cup√®re un type d'√©tablissement sp√©cifique avec cache ultra-rapide",
                "operationId": "get_establishment_type_api_v1_establishment_types__establishment_type_id___get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "establishment_type_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Establishment Type Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EstablishmentTypeSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Establishment Types"],
                "summary": "Mettre √† jour un type d'√©tablissement",
                "description": "Met √† jour un type d'√©tablissement avec invalidation de cache automatique",
                "operationId": "update_establishment_type_api_v1_establishment_types__establishment_type_id___put",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "establishment_type_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Establishment Type Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateEstablishmentTypeSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EstablishmentTypeSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Establishment Types"],
                "summary": "Supprimer un type d'√©tablissement",
                "description": "Supprime un type d'√©tablissement avec invalidation de cache automatique",
                "operationId": "delete_establishment_type_api_v1_establishment_types__establishment_type_id___delete",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "establishment_type_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Establishment Type Id"
                        }
                    }
                ],
                "responses": {
                    "204": { "description": "Successful Response" },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/formations/filter/": {
            "get": {
                "tags": ["Formations"],
                "summary": "Filtrer les formations",
                "description": "Recherche pagin√©e de formations avec filtres et cache intelligent",
                "operationId": "filter_formations_api_v1_formations_filter__get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Per Page"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name"
                        }
                    },
                    {
                        "name": "name_contains",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Contains"
                        }
                    },
                    {
                        "name": "duration",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "type": "integer" },
                                { "type": "null" }
                            ],
                            "title": "Duration"
                        }
                    },
                    {
                        "name": "level_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "type": "integer" },
                                { "type": "null" }
                            ],
                            "title": "Level Id"
                        }
                    },
                    {
                        "name": "mention_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "type": "integer" },
                                { "type": "null" }
                            ],
                            "title": "Mention Id"
                        }
                    },
                    {
                        "name": "establishment_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "type": "integer" },
                                { "type": "null" }
                            ],
                            "title": "Establishment Id"
                        }
                    },
                    {
                        "name": "authorization_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "type": "integer" },
                                { "type": "null" }
                            ],
                            "title": "Authorization Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultSchema_FormationSchema_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/formations/": {
            "post": {
                "tags": ["Formations"],
                "summary": "Cr√©er une formation",
                "description": "Cr√©e une nouvelle formation avec validation et mise en cache automatique",
                "operationId": "create_formation_api_v1_formations__post",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFormationSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormationSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Formations"],
                "summary": "Lister toutes les formations",
                "description": "Liste pagin√©e de toutes les formations avec cache haute performance",
                "operationId": "get_all_formations_api_v1_formations__get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Per Page"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultSchema_FormationSchema_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/formations/{formation_id}/": {
            "get": {
                "tags": ["Formations"],
                "summary": "R√©cup√©rer une formation par ID",
                "description": "R√©cup√®re une formation sp√©cifique avec cache ultra-rapide",
                "operationId": "get_formation_api_v1_formations__formation_id___get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "formation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Formation Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormationSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Formations"],
                "summary": "Mettre √† jour une formation",
                "description": "Met √† jour une formation avec invalidation de cache automatique",
                "operationId": "update_formation_api_v1_formations__formation_id___put",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "formation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Formation Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFormationSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormationSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Formations"],
                "summary": "Supprimer une formation",
                "description": "Supprime une formation avec invalidation de cache automatique",
                "operationId": "delete_formation_api_v1_formations__formation_id___delete",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "formation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Formation Id"
                        }
                    }
                ],
                "responses": {
                    "204": { "description": "Successful Response" },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/levels/": {
            "post": {
                "tags": ["Levels"],
                "summary": "Cr√©er un niveau",
                "description": "Cr√©e un nouveau niveau avec validation et mise en cache automatique",
                "operationId": "create_level_api_v1_levels__post",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateLevelSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LevelSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Levels"],
                "summary": "Lister tous les niveaux",
                "description": "Liste pagin√©e de tous les niveaux avec cache haute performance",
                "operationId": "get_all_levels_api_v1_levels__get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Per Page"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultSchema_LevelSchema_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/levels/filter/": {
            "get": {
                "tags": ["Levels"],
                "summary": "Filtrer les niveaux",
                "description": "Recherche pagin√©e de niveaux avec filtres et cache intelligent",
                "operationId": "filter_levels_api_v1_levels_filter__get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Per Page"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name"
                        }
                    },
                    {
                        "name": "name_contains",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Contains"
                        }
                    },
                    {
                        "name": "name_starts_with",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Starts With"
                        }
                    },
                    {
                        "name": "name_ends_with",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Ends With"
                        }
                    },
                    {
                        "name": "acronym",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Acronym"
                        }
                    },
                    {
                        "name": "acronym_contains",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Acronym Contains"
                        }
                    },
                    {
                        "name": "acronym_starts_with",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Acronym Starts With"
                        }
                    },
                    {
                        "name": "acronym_ends_with",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Acronym Ends With"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultSchema_LevelSchema_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/levels/{level_id}/": {
            "get": {
                "tags": ["Levels"],
                "summary": "R√©cup√©rer un niveau par ID",
                "description": "R√©cup√®re un niveau sp√©cifique avec cache ultra-rapide",
                "operationId": "get_level_api_v1_levels__level_id___get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "level_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Level Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LevelSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Levels"],
                "summary": "Mettre √† jour un niveau",
                "description": "Met √† jour un niveau avec invalidation de cache automatique",
                "operationId": "update_level_api_v1_levels__level_id___put",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "level_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Level Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateLevelSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LevelSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Levels"],
                "summary": "Supprimer un niveau",
                "description": "Supprime un niveau avec invalidation de cache automatique",
                "operationId": "delete_level_api_v1_levels__level_id___delete",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "level_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Level Id"
                        }
                    }
                ],
                "responses": {
                    "204": { "description": "Successful Response" },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/mentions/filter/": {
            "get": {
                "tags": ["Mentions"],
                "summary": "Filtrer les mentions",
                "description": "Recherche pagin√©e de mentions avec filtres et cache intelligent",
                "operationId": "filter_mentions_api_v1_mentions_filter__get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Per Page"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name"
                        }
                    },
                    {
                        "name": "name_contains",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Contains"
                        }
                    },
                    {
                        "name": "name_starts_with",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Starts With"
                        }
                    },
                    {
                        "name": "name_ends_with",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Ends With"
                        }
                    },
                    {
                        "name": "domain_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "type": "integer", "minimum": 1 },
                                { "type": "null" }
                            ],
                            "title": "Domain Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultSchema_MentionSchema_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/mentions/": {
            "post": {
                "tags": ["Mentions"],
                "summary": "Cr√©er une mention",
                "description": "Cr√©e une nouvelle mention avec validation et mise en cache automatique",
                "operationId": "create_mention_api_v1_mentions__post",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMentionSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MentionSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Mentions"],
                "summary": "Lister toutes les mentions",
                "description": "Liste pagin√©e de toutes les mentions avec cache haute performance",
                "operationId": "get_all_mentions_api_v1_mentions__get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Per Page"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultSchema_MentionSchema_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/mentions/{mention_id}/": {
            "get": {
                "tags": ["Mentions"],
                "summary": "R√©cup√©rer une mention par ID",
                "description": "R√©cup√®re une mention sp√©cifique avec cache ultra-rapide",
                "operationId": "get_mention_api_v1_mentions__mention_id___get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "mention_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Mention Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MentionSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Mentions"],
                "summary": "Mettre √† jour une mention",
                "description": "Met √† jour une mention avec invalidation de cache automatique",
                "operationId": "update_mention_api_v1_mentions__mention_id___put",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "mention_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Mention Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMentionSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MentionSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Mentions"],
                "summary": "Supprimer une mention",
                "description": "Supprime une mention avec invalidation de cache automatique",
                "operationId": "delete_mention_api_v1_mentions__mention_id___delete",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "mention_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Mention Id"
                        }
                    }
                ],
                "responses": {
                    "204": { "description": "Successful Response" },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/regions/": {
            "post": {
                "tags": ["Regions"],
                "summary": "Cr√©er une nouvelle r√©gion",
                "description": "Cr√©e une nouvelle r√©gion avec validation et mise en cache automatique",
                "operationId": "create_region_api_v1_regions__post",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRegionSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegionSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Regions"],
                "summary": "Lister toutes les r√©gions",
                "description": "Liste pagin√©e de toutes les r√©gions avec cache haute performance",
                "operationId": "get_all_regions_api_v1_regions__get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Per Page"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultSchema_RegionSchema_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/regions/filter/": {
            "get": {
                "tags": ["Regions"],
                "summary": "Filtrer les r√©gions",
                "description": "Recherche pagin√©e de r√©gions avec filtres et cache intelligent",
                "operationId": "filter_regions_api_v1_regions_filter__get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10,
                            "title": "Per Page"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "type": "integer" },
                                { "type": "null" }
                            ],
                            "title": "Id"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name"
                        }
                    },
                    {
                        "name": "name_contains",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Contains"
                        }
                    },
                    {
                        "name": "name_starts_with",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Starts With"
                        }
                    },
                    {
                        "name": "name_ends_with",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Name Ends With"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "type": "integer" },
                                { "type": "null" }
                            ],
                            "title": "Created By"
                        }
                    },
                    {
                        "name": "updated_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "type": "integer" },
                                { "type": "null" }
                            ],
                            "title": "Updated By"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResultSchema_RegionSchema_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/regions/{region_id}/": {
            "get": {
                "tags": ["Regions"],
                "summary": "R√©cup√©rer une r√©gion par ID",
                "description": "R√©cup√®re une r√©gion sp√©cifique avec cache ultra-rapide",
                "operationId": "get_region_api_v1_regions__region_id___get",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "region_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Region Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegionSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Regions"],
                "summary": "Mettre √† jour une r√©gion",
                "description": "Met √† jour une r√©gion avec invalidation de cache automatique",
                "operationId": "update_region_api_v1_regions__region_id___put",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "region_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Region Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRegionSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegionSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Regions"],
                "summary": "Supprimer une r√©gion",
                "description": "Supprime une r√©gion avec invalidation de cache automatique",
                "operationId": "delete_region_api_v1_regions__region_id___delete",
                "security": [{ "OAuth2PasswordBearer": [] }],
                "parameters": [
                    {
                        "name": "region_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "title": "Region Id"
                        }
                    }
                ],
                "responses": {
                    "204": { "description": "Successful Response" },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AnnualHeadcountBaseSchema": {
                "properties": {
                    "id": { "type": "integer", "title": "Id" },
                    "formation_id": {
                        "type": "integer",
                        "title": "Formation Id"
                    },
                    "academic_year": {
                        "type": "integer",
                        "title": "Academic Year",
                        "description": "Ann√©e universitaire (ex: 2023 pour 2023-2024)"
                    },
                    "students": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Students",
                        "description": "Nombre d'√©tudiants inscrits"
                    },
                    "success_rate": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 100.0,
                                "minimum": 0.0
                            },
                            { "type": "null" }
                        ],
                        "title": "Success Rate",
                        "description": "Taux de r√©ussite en pourcentage (ex: 85.5 pour 85,5%)"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "created_by": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Created By"
                    },
                    "updated_by": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Updated By"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "formation_id",
                    "academic_year",
                    "students",
                    "created_at",
                    "updated_at"
                ],
                "title": "AnnualHeadcountBaseSchema",
                "description": "Base schema for annual headcount"
            },
            "Body_login_oauth2_api_v1_auth_token_post": {
                "properties": {
                    "grant_type": {
                        "anyOf": [
                            { "type": "string", "pattern": "^password$" },
                            { "type": "null" }
                        ],
                        "title": "Grant Type"
                    },
                    "username": { "type": "string", "title": "Username" },
                    "password": { "type": "string", "title": "Password" },
                    "scope": {
                        "type": "string",
                        "title": "Scope",
                        "default": ""
                    },
                    "client_id": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Client Id"
                    },
                    "client_secret": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Client Secret"
                    }
                },
                "type": "object",
                "required": ["username", "password"],
                "title": "Body_login_oauth2_api_v1_auth_token_post"
            },
            "CityBaseSchema": {
                "properties": {
                    "id": { "type": "integer", "title": "Id" },
                    "name": { "type": "string", "title": "Name" },
                    "regionId": { "type": "integer", "title": "Regionid" },
                    "createdAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Createdat"
                    },
                    "updatedAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Updatedat"
                    },
                    "createdBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Createdby"
                    },
                    "updatedBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Updatedby"
                    }
                },
                "type": "object",
                "required": ["id", "name", "regionId"],
                "title": "CityBaseSchema",
                "description": "Base schema for city"
            },
            "CitySchema": {
                "properties": {
                    "id": { "type": "integer", "title": "Id" },
                    "name": { "type": "string", "title": "Name" },
                    "regionId": { "type": "integer", "title": "Regionid" },
                    "createdAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Createdat"
                    },
                    "updatedAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Updatedat"
                    },
                    "createdBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Createdby"
                    },
                    "updatedBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Updatedby"
                    }
                },
                "type": "object",
                "required": ["id", "name", "regionId"],
                "title": "CitySchema"
            },
            "CreateCitySchema": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 3,
                        "title": "Name",
                        "description": "Nom de la ville"
                    },
                    "regionId": {
                        "type": "integer",
                        "minimum": 1.0,
                        "title": "Regionid",
                        "description": "ID de la r√©gion"
                    }
                },
                "type": "object",
                "required": ["name", "regionId"],
                "title": "CreateCitySchema"
            },
            "CreateDomainSchema": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 100,
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": ["name"],
                "title": "CreateDomainSchema"
            },
            "CreateEstablishmentSchema": {
                "properties": {
                    "name": { "type": "string", "title": "Name" },
                    "acronym": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Acronym"
                    },
                    "address": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Address"
                    },
                    "contacts": {
                        "anyOf": [
                            { "items": { "type": "string" }, "type": "array" },
                            { "type": "null" }
                        ],
                        "title": "Contacts"
                    },
                    "website": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Website"
                    },
                    "description": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Description"
                    },
                    "latitude": {
                        "anyOf": [{ "type": "number" }, { "type": "null" }],
                        "title": "Latitude"
                    },
                    "longitude": {
                        "anyOf": [{ "type": "number" }, { "type": "null" }],
                        "title": "Longitude"
                    },
                    "establishmentTypeId": {
                        "type": "integer",
                        "title": "Establishmenttypeid"
                    },
                    "cityId": { "type": "integer", "title": "Cityid" }
                },
                "type": "object",
                "required": ["name", "establishmentTypeId", "cityId"],
                "title": "CreateEstablishmentSchema",
                "description": "Schema for creating a new establishment"
            },
            "CreateEstablishmentTypeSchema": {
                "properties": {
                    "name": { "type": "string", "title": "Name" },
                    "description": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Description"
                    }
                },
                "type": "object",
                "required": ["name"],
                "title": "CreateEstablishmentTypeSchema",
                "description": "Schema for creating a new establishment type"
            },
            "CreateFormationSchema": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Description"
                    },
                    "duration": {
                        "type": "integer",
                        "exclusiveMinimum": 0.0,
                        "title": "Duration"
                    },
                    "levelId": {
                        "type": "integer",
                        "exclusiveMinimum": 0.0,
                        "title": "Levelid"
                    },
                    "mentionId": {
                        "type": "integer",
                        "exclusiveMinimum": 0.0,
                        "title": "Mentionid"
                    },
                    "establishmentId": {
                        "type": "integer",
                        "exclusiveMinimum": 0.0,
                        "title": "Establishmentid"
                    },
                    "authorizationId": {
                        "anyOf": [
                            { "type": "integer", "exclusiveMinimum": 0.0 },
                            { "type": "null" }
                        ],
                        "title": "Authorizationid"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "duration",
                    "levelId",
                    "mentionId",
                    "establishmentId"
                ],
                "title": "CreateFormationSchema",
                "description": "Schema for creating a new formation"
            },
            "CreateLevelSchema": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the level"
                    },
                    "acronym": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Acronym",
                        "description": "Acronym of the level"
                    }
                },
                "type": "object",
                "required": ["name"],
                "title": "CreateLevelSchema",
                "description": "Schema for creating a level"
            },
            "CreateMentionSchema": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Name"
                    },
                    "domainId": {
                        "type": "integer",
                        "minimum": 1.0,
                        "title": "Domainid"
                    }
                },
                "type": "object",
                "required": ["name", "domainId"],
                "title": "CreateMentionSchema"
            },
            "CreateRateSchema": {
                "properties": {
                    "rating": {
                        "type": "number",
                        "maximum": 5.0,
                        "minimum": 0.0,
                        "title": "Rating",
                        "description": "Rating value between 0.0 and 5.0"
                    }
                },
                "type": "object",
                "required": ["rating"],
                "title": "CreateRateSchema"
            },
            "CreateRegionSchema": {
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Nom de la r√©gion"
                    }
                },
                "type": "object",
                "required": ["name"],
                "title": "CreateRegionSchema",
                "description": "Sch√©ma pour la cr√©ation d'une r√©gion"
            },
            "DomainSchema": {
                "properties": {
                    "id": { "type": "integer", "title": "Id" },
                    "name": {
                        "type": "string",
                        "maxLength": 100,
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Description"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Createdat"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updatedat"
                    },
                    "createdBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Createdby"
                    },
                    "updatedBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Updatedby"
                    }
                },
                "type": "object",
                "required": ["id", "name", "createdAt", "updatedAt"],
                "title": "DomainSchema"
            },
            "EstablishmentBaseSchema": {
                "properties": {
                    "id": { "type": "integer", "title": "Id" },
                    "name": { "type": "string", "title": "Name" },
                    "acronym": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Acronym"
                    },
                    "address": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Address"
                    },
                    "contacts": {
                        "anyOf": [
                            { "items": { "type": "string" }, "type": "array" },
                            { "type": "null" }
                        ],
                        "title": "Contacts"
                    },
                    "website": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Website"
                    },
                    "description": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Description"
                    },
                    "latitude": {
                        "anyOf": [{ "type": "number" }, { "type": "null" }],
                        "title": "Latitude"
                    },
                    "longitude": {
                        "anyOf": [{ "type": "number" }, { "type": "null" }],
                        "title": "Longitude"
                    },
                    "establishmentTypeId": {
                        "type": "integer",
                        "title": "Establishmenttypeid"
                    },
                    "cityId": { "type": "integer", "title": "Cityid" },
                    "legalStatus": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Legalstatus"
                    }
                },
                "type": "object",
                "required": ["id", "name", "establishmentTypeId", "cityId"],
                "title": "EstablishmentBaseSchema",
                "description": "Base schema for establishment"
            },
            "EstablishmentSchema": {
                "properties": {
                    "id": { "type": "integer", "title": "Id" },
                    "name": { "type": "string", "title": "Name" },
                    "acronym": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Acronym"
                    },
                    "address": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Address"
                    },
                    "contacts": {
                        "anyOf": [
                            { "items": { "type": "string" }, "type": "array" },
                            { "type": "null" }
                        ],
                        "title": "Contacts"
                    },
                    "website": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Website"
                    },
                    "description": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Description"
                    },
                    "latitude": {
                        "anyOf": [{ "type": "number" }, { "type": "null" }],
                        "title": "Latitude"
                    },
                    "longitude": {
                        "anyOf": [{ "type": "number" }, { "type": "null" }],
                        "title": "Longitude"
                    },
                    "establishmentTypeId": {
                        "type": "integer",
                        "title": "Establishmenttypeid"
                    },
                    "cityId": { "type": "integer", "title": "Cityid" },
                    "legalStatus": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Legalstatus"
                    },
                    "establishmentType": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EstablishmentTypeBaseSchema"
                            },
                            { "type": "null" }
                        ]
                    },
                    "city": {
                        "anyOf": [
                            { "$ref": "#/components/schemas/CityBaseSchema" },
                            { "type": "null" }
                        ]
                    },
                    "formations": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/FormationBaseSchema"
                                },
                                "type": "array"
                            },
                            { "type": "null" }
                        ],
                        "title": "Formations",
                        "default": []
                    }
                },
                "type": "object",
                "required": ["id", "name", "establishmentTypeId", "cityId"],
                "title": "EstablishmentSchema",
                "description": "Schema for establishment responses"
            },
            "EstablishmentTypeBaseSchema": {
                "properties": {
                    "id": { "type": "integer", "title": "Id" },
                    "name": { "type": "string", "title": "Name" },
                    "description": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Description"
                    },
                    "createdAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Createdat"
                    },
                    "updatedAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Updatedat"
                    },
                    "createdBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Createdby"
                    },
                    "updatedBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Updatedby"
                    }
                },
                "type": "object",
                "required": ["id", "name"],
                "title": "EstablishmentTypeBaseSchema",
                "description": "Base schema for establishment type"
            },
            "EstablishmentTypeSchema": {
                "properties": {
                    "id": { "type": "integer", "title": "Id" },
                    "name": { "type": "string", "title": "Name" },
                    "description": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Description"
                    },
                    "createdAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Createdat"
                    },
                    "updatedAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Updatedat"
                    },
                    "createdBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Createdby"
                    },
                    "updatedBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Updatedby"
                    }
                },
                "type": "object",
                "required": ["id", "name"],
                "title": "EstablishmentTypeSchema",
                "description": "Schema for establishment type responses"
            },
            "FormationAuthorizationBaseSchema": {
                "properties": {
                    "id": { "type": "integer", "title": "Id" },
                    "dateDebut": {
                        "type": "string",
                        "format": "date",
                        "title": "Datedebut"
                    },
                    "dateFin": {
                        "anyOf": [
                            { "type": "string", "format": "date" },
                            { "type": "null" }
                        ],
                        "title": "Datefin"
                    },
                    "status": { "type": "string", "title": "Status" },
                    "decree": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Decree"
                    },
                    "createdAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Createdat"
                    },
                    "updatedAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Updatedat"
                    },
                    "createdBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Createdby"
                    },
                    "updatedBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Updatedby"
                    }
                },
                "type": "object",
                "required": ["id", "dateDebut", "status"],
                "title": "FormationAuthorizationBaseSchema",
                "description": "Base schema for formation authorization"
            },
            "FormationBaseSchema": {
                "properties": {
                    "id": { "type": "integer", "title": "Id" },
                    "name": { "type": "string", "title": "Name" },
                    "description": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Description"
                    },
                    "duration": { "type": "integer", "title": "Duration" },
                    "levelId": { "type": "integer", "title": "Levelid" },
                    "mentionId": { "type": "integer", "title": "Mentionid" },
                    "establishmentId": {
                        "type": "integer",
                        "title": "Establishmentid"
                    },
                    "authorizationId": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Authorizationid"
                    },
                    "createdAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Createdat"
                    },
                    "updatedAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Updatedat"
                    },
                    "createdBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Createdby"
                    },
                    "updatedBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Updatedby"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "duration",
                    "levelId",
                    "mentionId",
                    "establishmentId"
                ],
                "title": "FormationBaseSchema",
                "description": "Base schema for formation"
            },
            "FormationSchema": {
                "properties": {
                    "id": { "type": "integer", "title": "Id" },
                    "name": { "type": "string", "title": "Name" },
                    "description": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Description"
                    },
                    "duration": { "type": "integer", "title": "Duration" },
                    "levelId": { "type": "integer", "title": "Levelid" },
                    "mentionId": { "type": "integer", "title": "Mentionid" },
                    "establishmentId": {
                        "type": "integer",
                        "title": "Establishmentid"
                    },
                    "authorizationId": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Authorizationid"
                    },
                    "createdAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Createdat"
                    },
                    "updatedAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Updatedat"
                    },
                    "createdBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Createdby"
                    },
                    "updatedBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Updatedby"
                    },
                    "level": {
                        "anyOf": [
                            { "$ref": "#/components/schemas/LevelBaseSchema" },
                            { "type": "null" }
                        ]
                    },
                    "mention": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MentionBaseSchema"
                            },
                            { "type": "null" }
                        ]
                    },
                    "establishment": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EstablishmentBaseSchema"
                            },
                            { "type": "null" }
                        ]
                    },
                    "authorization": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/FormationAuthorizationBaseSchema"
                            },
                            { "type": "null" }
                        ]
                    },
                    "annualHeadcounts": {
                        "items": {
                            "$ref": "#/components/schemas/AnnualHeadcountBaseSchema"
                        },
                        "type": "array",
                        "title": "Annualheadcounts",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "duration",
                    "levelId",
                    "mentionId",
                    "establishmentId"
                ],
                "title": "FormationSchema",
                "description": "Schema for formation responses"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "LevelBaseSchema": {
                "properties": {
                    "id": { "type": "integer", "title": "Id" },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the level"
                    },
                    "acronym": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Acronym",
                        "description": "Acronym of the level"
                    },
                    "createdAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Createdat"
                    },
                    "updatedAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Updatedat"
                    },
                    "createdBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Createdby"
                    },
                    "updatedBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Updatedby"
                    }
                },
                "type": "object",
                "required": ["id", "name"],
                "title": "LevelBaseSchema",
                "description": "Base schema for level"
            },
            "LevelSchema": {
                "properties": {
                    "id": { "type": "integer", "title": "Id" },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the level"
                    },
                    "acronym": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Acronym",
                        "description": "Acronym of the level"
                    },
                    "createdAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Createdat"
                    },
                    "updatedAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Updatedat"
                    },
                    "createdBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Createdby"
                    },
                    "updatedBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Updatedby"
                    }
                },
                "type": "object",
                "required": ["id", "name"],
                "title": "LevelSchema",
                "description": "Base schema for level data"
            },
            "Login": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "password": { "type": "string", "title": "Password" }
                },
                "type": "object",
                "required": ["email", "password"],
                "title": "Login"
            },
            "MentionBaseSchema": {
                "properties": {
                    "id": { "type": "integer", "title": "Id" },
                    "name": { "type": "string", "title": "Name" },
                    "domainId": { "type": "integer", "title": "Domainid" },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Createdat"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updatedat"
                    },
                    "createdBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Createdby"
                    },
                    "updatedBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Updatedby"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "domainId",
                    "createdAt",
                    "updatedAt"
                ],
                "title": "MentionBaseSchema",
                "description": "Base schema for mentions"
            },
            "MentionSchema": {
                "properties": {
                    "id": { "type": "integer", "title": "Id" },
                    "name": { "type": "string", "title": "Name" },
                    "domainId": { "type": "integer", "title": "Domainid" },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Createdat"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updatedat"
                    },
                    "createdBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Createdby"
                    },
                    "updatedBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Updatedby"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "domainId",
                    "createdAt",
                    "updatedAt"
                ],
                "title": "MentionSchema"
            },
            "PaginatedResultSchema_CitySchema_": {
                "properties": {
                    "items": {
                        "items": { "$ref": "#/components/schemas/CitySchema" },
                        "type": "array",
                        "title": "Items",
                        "description": "La liste des √©l√©ments pour la page courante"
                    },
                    "totalItems": {
                        "type": "integer",
                        "title": "Totalitems",
                        "description": "Nombre total d'√©l√©ments disponibles"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page",
                        "description": "Le num√©ro de la page actuelle"
                    },
                    "perPage": {
                        "type": "integer",
                        "title": "Perpage",
                        "description": "Le nombre d'√©l√©ments par page demand√©"
                    },
                    "totalPages": {
                        "type": "integer",
                        "title": "Totalpages",
                        "description": "Le nombre total de pages"
                    },
                    "nextPage": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Nextpage",
                        "description": "Le num√©ro de la page suivante, si elle existe"
                    },
                    "previousPage": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Previouspage",
                        "description": "Le num√©ro de la page pr√©c√©dente, si elle existe"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "totalItems",
                    "page",
                    "perPage",
                    "totalPages"
                ],
                "title": "PaginatedResultSchema[CitySchema]"
            },
            "PaginatedResultSchema_DomainSchema_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/DomainSchema"
                        },
                        "type": "array",
                        "title": "Items",
                        "description": "La liste des √©l√©ments pour la page courante"
                    },
                    "totalItems": {
                        "type": "integer",
                        "title": "Totalitems",
                        "description": "Nombre total d'√©l√©ments disponibles"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page",
                        "description": "Le num√©ro de la page actuelle"
                    },
                    "perPage": {
                        "type": "integer",
                        "title": "Perpage",
                        "description": "Le nombre d'√©l√©ments par page demand√©"
                    },
                    "totalPages": {
                        "type": "integer",
                        "title": "Totalpages",
                        "description": "Le nombre total de pages"
                    },
                    "nextPage": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Nextpage",
                        "description": "Le num√©ro de la page suivante, si elle existe"
                    },
                    "previousPage": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Previouspage",
                        "description": "Le num√©ro de la page pr√©c√©dente, si elle existe"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "totalItems",
                    "page",
                    "perPage",
                    "totalPages"
                ],
                "title": "PaginatedResultSchema[DomainSchema]"
            },
            "PaginatedResultSchema_EstablishmentSchema_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/EstablishmentSchema"
                        },
                        "type": "array",
                        "title": "Items",
                        "description": "La liste des √©l√©ments pour la page courante"
                    },
                    "totalItems": {
                        "type": "integer",
                        "title": "Totalitems",
                        "description": "Nombre total d'√©l√©ments disponibles"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page",
                        "description": "Le num√©ro de la page actuelle"
                    },
                    "perPage": {
                        "type": "integer",
                        "title": "Perpage",
                        "description": "Le nombre d'√©l√©ments par page demand√©"
                    },
                    "totalPages": {
                        "type": "integer",
                        "title": "Totalpages",
                        "description": "Le nombre total de pages"
                    },
                    "nextPage": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Nextpage",
                        "description": "Le num√©ro de la page suivante, si elle existe"
                    },
                    "previousPage": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Previouspage",
                        "description": "Le num√©ro de la page pr√©c√©dente, si elle existe"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "totalItems",
                    "page",
                    "perPage",
                    "totalPages"
                ],
                "title": "PaginatedResultSchema[EstablishmentSchema]"
            },
            "PaginatedResultSchema_EstablishmentTypeSchema_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/EstablishmentTypeSchema"
                        },
                        "type": "array",
                        "title": "Items",
                        "description": "La liste des √©l√©ments pour la page courante"
                    },
                    "totalItems": {
                        "type": "integer",
                        "title": "Totalitems",
                        "description": "Nombre total d'√©l√©ments disponibles"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page",
                        "description": "Le num√©ro de la page actuelle"
                    },
                    "perPage": {
                        "type": "integer",
                        "title": "Perpage",
                        "description": "Le nombre d'√©l√©ments par page demand√©"
                    },
                    "totalPages": {
                        "type": "integer",
                        "title": "Totalpages",
                        "description": "Le nombre total de pages"
                    },
                    "nextPage": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Nextpage",
                        "description": "Le num√©ro de la page suivante, si elle existe"
                    },
                    "previousPage": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Previouspage",
                        "description": "Le num√©ro de la page pr√©c√©dente, si elle existe"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "totalItems",
                    "page",
                    "perPage",
                    "totalPages"
                ],
                "title": "PaginatedResultSchema[EstablishmentTypeSchema]"
            },
            "PaginatedResultSchema_FormationSchema_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/FormationSchema"
                        },
                        "type": "array",
                        "title": "Items",
                        "description": "La liste des √©l√©ments pour la page courante"
                    },
                    "totalItems": {
                        "type": "integer",
                        "title": "Totalitems",
                        "description": "Nombre total d'√©l√©ments disponibles"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page",
                        "description": "Le num√©ro de la page actuelle"
                    },
                    "perPage": {
                        "type": "integer",
                        "title": "Perpage",
                        "description": "Le nombre d'√©l√©ments par page demand√©"
                    },
                    "totalPages": {
                        "type": "integer",
                        "title": "Totalpages",
                        "description": "Le nombre total de pages"
                    },
                    "nextPage": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Nextpage",
                        "description": "Le num√©ro de la page suivante, si elle existe"
                    },
                    "previousPage": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Previouspage",
                        "description": "Le num√©ro de la page pr√©c√©dente, si elle existe"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "totalItems",
                    "page",
                    "perPage",
                    "totalPages"
                ],
                "title": "PaginatedResultSchema[FormationSchema]"
            },
            "PaginatedResultSchema_LevelSchema_": {
                "properties": {
                    "items": {
                        "items": { "$ref": "#/components/schemas/LevelSchema" },
                        "type": "array",
                        "title": "Items",
                        "description": "La liste des √©l√©ments pour la page courante"
                    },
                    "totalItems": {
                        "type": "integer",
                        "title": "Totalitems",
                        "description": "Nombre total d'√©l√©ments disponibles"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page",
                        "description": "Le num√©ro de la page actuelle"
                    },
                    "perPage": {
                        "type": "integer",
                        "title": "Perpage",
                        "description": "Le nombre d'√©l√©ments par page demand√©"
                    },
                    "totalPages": {
                        "type": "integer",
                        "title": "Totalpages",
                        "description": "Le nombre total de pages"
                    },
                    "nextPage": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Nextpage",
                        "description": "Le num√©ro de la page suivante, si elle existe"
                    },
                    "previousPage": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Previouspage",
                        "description": "Le num√©ro de la page pr√©c√©dente, si elle existe"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "totalItems",
                    "page",
                    "perPage",
                    "totalPages"
                ],
                "title": "PaginatedResultSchema[LevelSchema]"
            },
            "PaginatedResultSchema_MentionSchema_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/MentionSchema"
                        },
                        "type": "array",
                        "title": "Items",
                        "description": "La liste des √©l√©ments pour la page courante"
                    },
                    "totalItems": {
                        "type": "integer",
                        "title": "Totalitems",
                        "description": "Nombre total d'√©l√©ments disponibles"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page",
                        "description": "Le num√©ro de la page actuelle"
                    },
                    "perPage": {
                        "type": "integer",
                        "title": "Perpage",
                        "description": "Le nombre d'√©l√©ments par page demand√©"
                    },
                    "totalPages": {
                        "type": "integer",
                        "title": "Totalpages",
                        "description": "Le nombre total de pages"
                    },
                    "nextPage": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Nextpage",
                        "description": "Le num√©ro de la page suivante, si elle existe"
                    },
                    "previousPage": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Previouspage",
                        "description": "Le num√©ro de la page pr√©c√©dente, si elle existe"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "totalItems",
                    "page",
                    "perPage",
                    "totalPages"
                ],
                "title": "PaginatedResultSchema[MentionSchema]"
            },
            "PaginatedResultSchema_RegionSchema_": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/RegionSchema"
                        },
                        "type": "array",
                        "title": "Items",
                        "description": "La liste des √©l√©ments pour la page courante"
                    },
                    "totalItems": {
                        "type": "integer",
                        "title": "Totalitems",
                        "description": "Nombre total d'√©l√©ments disponibles"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page",
                        "description": "Le num√©ro de la page actuelle"
                    },
                    "perPage": {
                        "type": "integer",
                        "title": "Perpage",
                        "description": "Le nombre d'√©l√©ments par page demand√©"
                    },
                    "totalPages": {
                        "type": "integer",
                        "title": "Totalpages",
                        "description": "Le nombre total de pages"
                    },
                    "nextPage": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Nextpage",
                        "description": "Le num√©ro de la page suivante, si elle existe"
                    },
                    "previousPage": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Previouspage",
                        "description": "Le num√©ro de la page pr√©c√©dente, si elle existe"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "totalItems",
                    "page",
                    "perPage",
                    "totalPages"
                ],
                "title": "PaginatedResultSchema[RegionSchema]"
            },
            "RateSchema": {
                "properties": {
                    "id": { "type": "integer", "title": "Id" },
                    "establishment_id": {
                        "type": "integer",
                        "title": "Establishment Id"
                    },
                    "user_id": { "type": "integer", "title": "User Id" },
                    "rating": { "type": "number", "title": "Rating" },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "establishment_id",
                    "user_id",
                    "rating",
                    "created_at",
                    "updated_at"
                ],
                "title": "RateSchema"
            },
            "RegionSchema": {
                "properties": {
                    "id": { "type": "integer", "title": "Id" },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the region"
                    },
                    "createdAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Createdat"
                    },
                    "updatedAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Updatedat"
                    },
                    "createdBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Createdby"
                    },
                    "updatedBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Updatedby"
                    }
                },
                "type": "object",
                "required": ["id", "name"],
                "title": "RegionSchema",
                "description": "Sch√©ma de base pour les donn√©es de r√©gion"
            },
            "SignUpSchema": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "password": { "type": "string", "title": "Password" }
                },
                "type": "object",
                "required": ["email", "password"],
                "title": "SignUpSchema"
            },
            "UpdateCitySchema": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 100,
                                "minLength": 3
                            },
                            { "type": "null" }
                        ],
                        "title": "Name",
                        "description": "Nom de la ville"
                    },
                    "regionId": {
                        "anyOf": [
                            { "type": "integer", "minimum": 1.0 },
                            { "type": "null" }
                        ],
                        "title": "Regionid",
                        "description": "ID de la r√©gion"
                    }
                },
                "type": "object",
                "title": "UpdateCitySchema"
            },
            "UpdateDomainSchema": {
                "properties": {
                    "name": {
                        "anyOf": [
                            { "type": "string", "maxLength": 100 },
                            { "type": "null" }
                        ],
                        "title": "Name"
                    }
                },
                "type": "object",
                "title": "UpdateDomainSchema"
            },
            "UpdateEstablishmentSchema": {
                "properties": {
                    "name": { "type": "string", "title": "Name" },
                    "acronym": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Acronym"
                    },
                    "address": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Address"
                    },
                    "contacts": {
                        "anyOf": [
                            { "items": { "type": "string" }, "type": "array" },
                            { "type": "null" }
                        ],
                        "title": "Contacts"
                    },
                    "website": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Website"
                    },
                    "description": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Description"
                    },
                    "latitude": {
                        "anyOf": [{ "type": "number" }, { "type": "null" }],
                        "title": "Latitude"
                    },
                    "longitude": {
                        "anyOf": [{ "type": "number" }, { "type": "null" }],
                        "title": "Longitude"
                    },
                    "establishmentTypeId": {
                        "type": "integer",
                        "title": "Establishmenttypeid"
                    },
                    "cityId": { "type": "integer", "title": "Cityid" }
                },
                "type": "object",
                "required": ["name", "establishmentTypeId", "cityId"],
                "title": "UpdateEstablishmentSchema",
                "description": "Schema for updating an establishment"
            },
            "UpdateEstablishmentTypeSchema": {
                "properties": {
                    "name": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Description"
                    }
                },
                "type": "object",
                "title": "UpdateEstablishmentTypeSchema",
                "description": "Schema for updating an establishment type"
            },
            "UpdateFormationSchema": {
                "properties": {
                    "name": {
                        "anyOf": [
                            { "type": "string", "maxLength": 255 },
                            { "type": "null" }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Description"
                    },
                    "duration": {
                        "anyOf": [
                            { "type": "integer", "exclusiveMinimum": 0.0 },
                            { "type": "null" }
                        ],
                        "title": "Duration"
                    },
                    "levelId": {
                        "anyOf": [
                            { "type": "integer", "exclusiveMinimum": 0.0 },
                            { "type": "null" }
                        ],
                        "title": "Levelid"
                    },
                    "mentionId": {
                        "anyOf": [
                            { "type": "integer", "exclusiveMinimum": 0.0 },
                            { "type": "null" }
                        ],
                        "title": "Mentionid"
                    },
                    "establishmentId": {
                        "anyOf": [
                            { "type": "integer", "exclusiveMinimum": 0.0 },
                            { "type": "null" }
                        ],
                        "title": "Establishmentid"
                    },
                    "authorizationId": {
                        "anyOf": [
                            { "type": "integer", "exclusiveMinimum": 0.0 },
                            { "type": "null" }
                        ],
                        "title": "Authorizationid"
                    }
                },
                "type": "object",
                "title": "UpdateFormationSchema",
                "description": "Schema for updating a formation"
            },
            "UpdateLevelSchema": {
                "properties": {
                    "name": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Name",
                        "description": "Name of the level"
                    },
                    "acronym": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Acronym",
                        "description": "Acronym of the level"
                    }
                },
                "type": "object",
                "title": "UpdateLevelSchema",
                "description": "Schema for updating a level"
            },
            "UpdateMentionSchema": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255,
                                "minLength": 1
                            },
                            { "type": "null" }
                        ],
                        "title": "Name"
                    },
                    "domainId": {
                        "anyOf": [
                            { "type": "integer", "minimum": 1.0 },
                            { "type": "null" }
                        ],
                        "title": "Domainid"
                    }
                },
                "type": "object",
                "title": "UpdateMentionSchema"
            },
            "UpdateRegionSchema": {
                "properties": {
                    "name": {
                        "anyOf": [
                            { "type": "string", "minLength": 1 },
                            { "type": "null" }
                        ],
                        "title": "Name",
                        "description": "Nom de la r√©gion"
                    }
                },
                "type": "object",
                "title": "UpdateRegionSchema",
                "description": "Sch√©ma pour la mise √† jour compl√®te d'une r√©gion (PUT)"
            },
            "UserSchema": {
                "properties": {
                    "id": { "type": "integer", "title": "Id" },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "active": {
                        "type": "boolean",
                        "title": "Active",
                        "default": true
                    },
                    "isAdmin": {
                        "type": "boolean",
                        "title": "Isadmin",
                        "default": false
                    },
                    "createdBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Createdby"
                    },
                    "updatedBy": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Updatedby"
                    },
                    "createdAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Createdat"
                    },
                    "updatedAt": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Updatedat"
                    }
                },
                "type": "object",
                "required": ["id", "email"],
                "title": "UserSchema",
                "description": "Schema for user responses"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                { "type": "string" },
                                { "type": "integer" }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": { "type": "string", "title": "Message" },
                    "type": { "type": "string", "title": "Error Type" }
                },
                "type": "object",
                "required": ["loc", "msg", "type"],
                "title": "ValidationError"
            }
        },
        "securitySchemes": {
            "OAuth2PasswordBearer": {
                "type": "oauth2",
                "flows": {
                    "password": {
                        "scopes": {},
                        "tokenUrl": "api/v1/auth/token"
                    }
                }
            }
        }
    }
}
